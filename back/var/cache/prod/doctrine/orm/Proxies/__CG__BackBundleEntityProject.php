<?php

namespace Proxies\__CG__\BackBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Project extends \BackBundle\Entity\Project implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'projectName', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'projectDescription', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'keywords', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'websiteType', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'activityArea', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'target', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'projectFocus', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'projectBudget', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'languages', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'createdBy', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'clientName', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'releaseDate', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'givingToAgency', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'keyFunctionnality', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'techFront', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'devLanguages', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'framework', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'cms', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'technicalChallenges', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'focalPoints', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'viewNumber', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'likeNumber', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'averageGrade', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'averageJuryGrade', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'categoryAwards', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'customer'];
        }

        return ['__isInitialized__', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'projectName', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'projectDescription', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'keywords', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'websiteType', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'activityArea', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'target', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'projectFocus', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'projectBudget', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'languages', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'createdBy', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'clientName', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'releaseDate', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'givingToAgency', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'keyFunctionnality', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'techFront', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'devLanguages', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'framework', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'cms', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'technicalChallenges', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'focalPoints', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'viewNumber', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'likeNumber', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'averageGrade', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'averageJuryGrade', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'categoryAwards', '' . "\0" . 'BackBundle\\Entity\\Project' . "\0" . 'customer'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Project $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectName($projectName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectName', [$projectName]);

        return parent::setProjectName($projectName);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectName', []);

        return parent::getProjectName();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectDescription($projectDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectDescription', [$projectDescription]);

        return parent::setProjectDescription($projectDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectDescription', []);

        return parent::getProjectDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setKeywords($keywords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKeywords', [$keywords]);

        return parent::setKeywords($keywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getKeywords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeywords', []);

        return parent::getKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebsiteType($websiteType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebsiteType', [$websiteType]);

        return parent::setWebsiteType($websiteType);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsiteType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsiteType', []);

        return parent::getWebsiteType();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivityArea($activityArea)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivityArea', [$activityArea]);

        return parent::setActivityArea($activityArea);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivityArea()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivityArea', []);

        return parent::getActivityArea();
    }

    /**
     * {@inheritDoc}
     */
    public function setTarget($target)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTarget', [$target]);

        return parent::setTarget($target);
    }

    /**
     * {@inheritDoc}
     */
    public function getTarget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTarget', []);

        return parent::getTarget();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectFocus($projectFocus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectFocus', [$projectFocus]);

        return parent::setProjectFocus($projectFocus);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectFocus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectFocus', []);

        return parent::getProjectFocus();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectBudget($projectBudget)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectBudget', [$projectBudget]);

        return parent::setProjectBudget($projectBudget);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectBudget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectBudget', []);

        return parent::getProjectBudget();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguages($languages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguages', [$languages]);

        return parent::setLanguages($languages);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguages', []);

        return parent::getLanguages();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientName($clientName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientName', [$clientName]);

        return parent::setClientName($clientName);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientName', []);

        return parent::getClientName();
    }

    /**
     * {@inheritDoc}
     */
    public function setReleaseDate($releaseDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReleaseDate', [$releaseDate]);

        return parent::setReleaseDate($releaseDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getReleaseDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReleaseDate', []);

        return parent::getReleaseDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setGivingToAgency($givingToAgency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGivingToAgency', [$givingToAgency]);

        return parent::setGivingToAgency($givingToAgency);
    }

    /**
     * {@inheritDoc}
     */
    public function getGivingToAgency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGivingToAgency', []);

        return parent::getGivingToAgency();
    }

    /**
     * {@inheritDoc}
     */
    public function setKeyFunctionnality($keyFunctionnality)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKeyFunctionnality', [$keyFunctionnality]);

        return parent::setKeyFunctionnality($keyFunctionnality);
    }

    /**
     * {@inheritDoc}
     */
    public function getKeyFunctionnality()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeyFunctionnality', []);

        return parent::getKeyFunctionnality();
    }

    /**
     * {@inheritDoc}
     */
    public function setTechFront($techFront)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTechFront', [$techFront]);

        return parent::setTechFront($techFront);
    }

    /**
     * {@inheritDoc}
     */
    public function getTechFront()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTechFront', []);

        return parent::getTechFront();
    }

    /**
     * {@inheritDoc}
     */
    public function setDevLanguages($devLanguages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDevLanguages', [$devLanguages]);

        return parent::setDevLanguages($devLanguages);
    }

    /**
     * {@inheritDoc}
     */
    public function getDevLanguages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDevLanguages', []);

        return parent::getDevLanguages();
    }

    /**
     * {@inheritDoc}
     */
    public function setFramework($framework)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFramework', [$framework]);

        return parent::setFramework($framework);
    }

    /**
     * {@inheritDoc}
     */
    public function getFramework()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFramework', []);

        return parent::getFramework();
    }

    /**
     * {@inheritDoc}
     */
    public function setCms($cms)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCms', [$cms]);

        return parent::setCms($cms);
    }

    /**
     * {@inheritDoc}
     */
    public function getCms()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCms', []);

        return parent::getCms();
    }

    /**
     * {@inheritDoc}
     */
    public function setTechnicalChallenges($technicalChallenges)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTechnicalChallenges', [$technicalChallenges]);

        return parent::setTechnicalChallenges($technicalChallenges);
    }

    /**
     * {@inheritDoc}
     */
    public function getTechnicalChallenges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTechnicalChallenges', []);

        return parent::getTechnicalChallenges();
    }

    /**
     * {@inheritDoc}
     */
    public function setFocalPoints($focalPoints)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFocalPoints', [$focalPoints]);

        return parent::setFocalPoints($focalPoints);
    }

    /**
     * {@inheritDoc}
     */
    public function getFocalPoints()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFocalPoints', []);

        return parent::getFocalPoints();
    }

    /**
     * {@inheritDoc}
     */
    public function setViewNumber($viewNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setViewNumber', [$viewNumber]);

        return parent::setViewNumber($viewNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getViewNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViewNumber', []);

        return parent::getViewNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setLikeNumber($likeNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLikeNumber', [$likeNumber]);

        return parent::setLikeNumber($likeNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getLikeNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLikeNumber', []);

        return parent::getLikeNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setAverageGrade($averageGrade)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAverageGrade', [$averageGrade]);

        return parent::setAverageGrade($averageGrade);
    }

    /**
     * {@inheritDoc}
     */
    public function getAverageGrade()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAverageGrade', []);

        return parent::getAverageGrade();
    }

    /**
     * {@inheritDoc}
     */
    public function setAverageJuryGrade($averageJuryGrade)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAverageJuryGrade', [$averageJuryGrade]);

        return parent::setAverageJuryGrade($averageJuryGrade);
    }

    /**
     * {@inheritDoc}
     */
    public function getAverageJuryGrade()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAverageJuryGrade', []);

        return parent::getAverageJuryGrade();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryAwards(\BackBundle\Entity\CategoryAwards $categoryAwards)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryAwards', [$categoryAwards]);

        return parent::setCategoryAwards($categoryAwards);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryAwards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryAwards', []);

        return parent::getCategoryAwards();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer(\BackBundle\Entity\Customer $customer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', [$customer]);

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', []);

        return parent::getCustomer();
    }

}
